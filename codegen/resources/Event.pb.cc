// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resources/Event.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "resources/Event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace buffers {
namespace resources {
class ArgumentDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Argument>
     _instance;
} _Argument_default_instance_;
class ActionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Action>
     _instance;
} _Action_default_instance_;
class EventDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Event>
     _instance;
} _Event_default_instance_;

namespace protobuf_resources_2fEvent_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Argument, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Argument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Argument, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Argument, string_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, libid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, use_relative_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, is_question_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, use_apply_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, exe_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, function_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, code_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, who_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, relative_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, is_not_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, arguments_),
  3,
  4,
  5,
  8,
  9,
  6,
  7,
  0,
  1,
  2,
  10,
  11,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, action_),
  1,
  2,
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(Argument)},
  { 9, 27, sizeof(Action)},
  { 40, 49, sizeof(Event)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Argument_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Action_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Event_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "resources/Event.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::buffers::protobuf_options_2eproto::InitDefaults();
  _Argument_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Argument_default_instance_);_Action_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Action_default_instance_);_Event_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Event_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025resources/Event.proto\022\021buffers.resourc"
      "es\032\roptions.proto\"(\n\010Argument\022\014\n\004kind\030\001 "
      "\001(\005\022\016\n\006string\030\002 \001(\t\"\244\003\n\006Action\022\r\n\005libid\030"
      "\001 \001(\005\022\n\n\002id\030\002 \001(\005\022\014\n\004kind\030\003 \001(\005\022%\n\014use_r"
      "elative\030\004 \001(\010B\017\202\265\030\013userelative\022#\n\013is_que"
      "stion\030\005 \001(\010B\016\202\265\030\nisquestion\022$\n\014use_apply"
      "_to\030\006 \001(\005B\016\202\265\030\nuseapplyto\022\035\n\010exe_type\030\007 "
      "\001(\005B\013\202\265\030\007exetype\022\'\n\rfunction_name\030\010 \001(\tB"
      "\020\202\265\030\014functionname\022#\n\013code_string\030\t \001(\tB\016"
      "\202\265\030\ncodestring\022\035\n\010who_name\030\n \001(\tB\013\202\265\030\007wh"
      "oName\022\020\n\010relative\030\013 \001(\010\022\031\n\006is_not\030\014 \001(\010B"
      "\t\202\265\030\005isnot\022F\n\targuments\030\r \003(\0132\033.buffers."
      "resources.ArgumentB\026\202\265\030\022arguments/argume"
      "nt\"\203\001\n\005Event\022\033\n\004type\030\001 \001(\005B\r\202\265\030\teventtyp"
      "e\022\031\n\006number\030\002 \001(\005B\t\202\265\030\005enumb\022\027\n\004name\030\003 \001"
      "(\tB\t\202\265\030\005ename\022)\n\006action\030\004 \003(\0132\031.buffers."
      "resources.Action"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 656);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "resources/Event.proto", &protobuf_RegisterTypes);
  ::buffers::protobuf_options_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_resources_2fEvent_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Argument::kKindFieldNumber;
const int Argument::kStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Argument::Argument()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_resources_2fEvent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Argument)
}
Argument::Argument(const Argument& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_string()) {
    string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_);
  }
  kind_ = from.kind_;
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Argument)
}

void Argument::SharedCtor() {
  _cached_size_ = 0;
  string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
}

Argument::~Argument() {
  // @@protoc_insertion_point(destructor:buffers.resources.Argument)
  SharedDtor();
}

void Argument::SharedDtor() {
  string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Argument::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Argument::descriptor() {
  protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_resources_2fEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Argument& Argument::default_instance() {
  protobuf_resources_2fEvent_2eproto::InitDefaults();
  return *internal_default_instance();
}

Argument* Argument::New(::google::protobuf::Arena* arena) const {
  Argument* n = new Argument;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Argument::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Argument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_string()) {
    GOOGLE_DCHECK(!string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*string_.UnsafeRawStringPointer())->clear();
  }
  kind_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Argument::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Argument)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string string = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string().data(), static_cast<int>(this->string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Argument.string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Argument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Argument)
  return false;
#undef DO_
}

void Argument::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Argument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 kind = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->kind(), output);
  }

  // optional string string = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string().data(), static_cast<int>(this->string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Argument.string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Argument)
}

::google::protobuf::uint8* Argument::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Argument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 kind = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->kind(), target);
  }

  // optional string string = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string().data(), static_cast<int>(this->string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Argument.string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Argument)
  return target;
}

size_t Argument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Argument)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string string = 2;
    if (has_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string());
    }

    // optional int32 kind = 1;
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kind());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Argument::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Argument)
  GOOGLE_DCHECK_NE(&from, this);
  const Argument* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Argument>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Argument)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Argument)
    MergeFrom(*source);
  }
}

void Argument::MergeFrom(const Argument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Argument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_string();
      string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_);
    }
    if (cached_has_bits & 0x00000002u) {
      kind_ = from.kind_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Argument::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Argument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Argument::CopyFrom(const Argument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Argument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Argument::IsInitialized() const {
  return true;
}

void Argument::Swap(Argument* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Argument::InternalSwap(Argument* other) {
  using std::swap;
  string_.Swap(&other->string_);
  swap(kind_, other->kind_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Argument::GetMetadata() const {
  protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_resources_2fEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Argument

// optional int32 kind = 1;
bool Argument::has_kind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Argument::set_has_kind() {
  _has_bits_[0] |= 0x00000002u;
}
void Argument::clear_has_kind() {
  _has_bits_[0] &= ~0x00000002u;
}
void Argument::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
::google::protobuf::int32 Argument::kind() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Argument.kind)
  return kind_;
}
void Argument::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Argument.kind)
}

// optional string string = 2;
bool Argument::has_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Argument::set_has_string() {
  _has_bits_[0] |= 0x00000001u;
}
void Argument::clear_has_string() {
  _has_bits_[0] &= ~0x00000001u;
}
void Argument::clear_string() {
  string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string();
}
const ::std::string& Argument::string() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Argument.string)
  return string_.GetNoArena();
}
void Argument::set_string(const ::std::string& value) {
  set_has_string();
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:buffers.resources.Argument.string)
}
#if LANG_CXX11
void Argument::set_string(::std::string&& value) {
  set_has_string();
  string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:buffers.resources.Argument.string)
}
#endif
void Argument::set_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_string();
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:buffers.resources.Argument.string)
}
void Argument::set_string(const char* value, size_t size) {
  set_has_string();
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:buffers.resources.Argument.string)
}
::std::string* Argument::mutable_string() {
  set_has_string();
  // @@protoc_insertion_point(field_mutable:buffers.resources.Argument.string)
  return string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Argument::release_string() {
  // @@protoc_insertion_point(field_release:buffers.resources.Argument.string)
  clear_has_string();
  return string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Argument::set_allocated_string(::std::string* string) {
  if (string != NULL) {
    set_has_string();
  } else {
    clear_has_string();
  }
  string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string);
  // @@protoc_insertion_point(field_set_allocated:buffers.resources.Argument.string)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Action::kLibidFieldNumber;
const int Action::kIdFieldNumber;
const int Action::kKindFieldNumber;
const int Action::kUseRelativeFieldNumber;
const int Action::kIsQuestionFieldNumber;
const int Action::kUseApplyToFieldNumber;
const int Action::kExeTypeFieldNumber;
const int Action::kFunctionNameFieldNumber;
const int Action::kCodeStringFieldNumber;
const int Action::kWhoNameFieldNumber;
const int Action::kRelativeFieldNumber;
const int Action::kIsNotFieldNumber;
const int Action::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Action::Action()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_resources_2fEvent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Action)
}
Action::Action(const Action& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      arguments_(from.arguments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_function_name()) {
    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
  code_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code_string()) {
    code_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_string_);
  }
  who_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_who_name()) {
    who_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.who_name_);
  }
  ::memcpy(&libid_, &from.libid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_not_) -
    reinterpret_cast<char*>(&libid_)) + sizeof(is_not_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Action)
}

void Action::SharedCtor() {
  _cached_size_ = 0;
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  who_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&libid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_not_) -
      reinterpret_cast<char*>(&libid_)) + sizeof(is_not_));
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:buffers.resources.Action)
  SharedDtor();
}

void Action::SharedDtor() {
  function_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  who_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Action::descriptor() {
  protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_resources_2fEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Action& Action::default_instance() {
  protobuf_resources_2fEvent_2eproto::InitDefaults();
  return *internal_default_instance();
}

Action* Action::New(::google::protobuf::Arena* arena) const {
  Action* n = new Action;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!function_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*function_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!code_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*code_string_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!who_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*who_name_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&libid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&exe_type_) -
        reinterpret_cast<char*>(&libid_)) + sizeof(exe_type_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&use_relative_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_not_) -
        reinterpret_cast<char*>(&use_relative_)) + sizeof(is_not_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Action)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 libid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_libid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 kind = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_relative = 4 [(.buffers.gmx) = "userelative"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_use_relative();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_relative_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_question = 5 [(.buffers.gmx) = "isquestion"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_question();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_question_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 use_apply_to = 6 [(.buffers.gmx) = "useapplyto"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_use_apply_to();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &use_apply_to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exe_type = 7 [(.buffers.gmx) = "exetype"];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_exe_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exe_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string function_name = 8 [(.buffers.gmx) = "functionname"];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->function_name().data(), static_cast<int>(this->function_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Action.function_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string code_string = 9 [(.buffers.gmx) = "codestring"];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code_string().data(), static_cast<int>(this->code_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Action.code_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string who_name = 10 [(.buffers.gmx) = "whoName"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_who_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->who_name().data(), static_cast<int>(this->who_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Action.who_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool relative = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_relative();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &relative_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_not = 12 [(.buffers.gmx) = "isnot"];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_is_not();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_not_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .buffers.resources.Argument arguments = 13 [(.buffers.gmx) = "arguments/argument"];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Action)
  return false;
#undef DO_
}

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 libid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libid(), output);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional int32 kind = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->kind(), output);
  }

  // optional bool use_relative = 4 [(.buffers.gmx) = "userelative"];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->use_relative(), output);
  }

  // optional bool is_question = 5 [(.buffers.gmx) = "isquestion"];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_question(), output);
  }

  // optional int32 use_apply_to = 6 [(.buffers.gmx) = "useapplyto"];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->use_apply_to(), output);
  }

  // optional int32 exe_type = 7 [(.buffers.gmx) = "exetype"];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->exe_type(), output);
  }

  // optional string function_name = 8 [(.buffers.gmx) = "functionname"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Action.function_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->function_name(), output);
  }

  // optional string code_string = 9 [(.buffers.gmx) = "codestring"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code_string().data(), static_cast<int>(this->code_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Action.code_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->code_string(), output);
  }

  // optional string who_name = 10 [(.buffers.gmx) = "whoName"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->who_name().data(), static_cast<int>(this->who_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Action.who_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->who_name(), output);
  }

  // optional bool relative = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->relative(), output);
  }

  // optional bool is_not = 12 [(.buffers.gmx) = "isnot"];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_not(), output);
  }

  // repeated .buffers.resources.Argument arguments = 13 [(.buffers.gmx) = "arguments/argument"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->arguments(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Action)
}

::google::protobuf::uint8* Action::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 libid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libid(), target);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional int32 kind = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->kind(), target);
  }

  // optional bool use_relative = 4 [(.buffers.gmx) = "userelative"];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->use_relative(), target);
  }

  // optional bool is_question = 5 [(.buffers.gmx) = "isquestion"];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_question(), target);
  }

  // optional int32 use_apply_to = 6 [(.buffers.gmx) = "useapplyto"];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->use_apply_to(), target);
  }

  // optional int32 exe_type = 7 [(.buffers.gmx) = "exetype"];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->exe_type(), target);
  }

  // optional string function_name = 8 [(.buffers.gmx) = "functionname"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Action.function_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->function_name(), target);
  }

  // optional string code_string = 9 [(.buffers.gmx) = "codestring"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code_string().data(), static_cast<int>(this->code_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Action.code_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->code_string(), target);
  }

  // optional string who_name = 10 [(.buffers.gmx) = "whoName"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->who_name().data(), static_cast<int>(this->who_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Action.who_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->who_name(), target);
  }

  // optional bool relative = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->relative(), target);
  }

  // optional bool is_not = 12 [(.buffers.gmx) = "isnot"];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_not(), target);
  }

  // repeated .buffers.resources.Argument arguments = 13 [(.buffers.gmx) = "arguments/argument"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Action)
  return target;
}

size_t Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Action)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .buffers.resources.Argument arguments = 13 [(.buffers.gmx) = "arguments/argument"];
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arguments(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string function_name = 8 [(.buffers.gmx) = "functionname"];
    if (has_function_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->function_name());
    }

    // optional string code_string = 9 [(.buffers.gmx) = "codestring"];
    if (has_code_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code_string());
    }

    // optional string who_name = 10 [(.buffers.gmx) = "whoName"];
    if (has_who_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->who_name());
    }

    // optional int32 libid = 1;
    if (has_libid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libid());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 kind = 3;
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kind());
    }

    // optional int32 use_apply_to = 6 [(.buffers.gmx) = "useapplyto"];
    if (has_use_apply_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->use_apply_to());
    }

    // optional int32 exe_type = 7 [(.buffers.gmx) = "exetype"];
    if (has_exe_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exe_type());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional bool use_relative = 4 [(.buffers.gmx) = "userelative"];
    if (has_use_relative()) {
      total_size += 1 + 1;
    }

    // optional bool is_question = 5 [(.buffers.gmx) = "isquestion"];
    if (has_is_question()) {
      total_size += 1 + 1;
    }

    // optional bool relative = 11;
    if (has_relative()) {
      total_size += 1 + 1;
    }

    // optional bool is_not = 12 [(.buffers.gmx) = "isnot"];
    if (has_is_not()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Action)
  GOOGLE_DCHECK_NE(&from, this);
  const Action* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Action>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_function_name();
      function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_code_string();
      code_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_string_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_who_name();
      who_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.who_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      libid_ = from.libid_;
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000020u) {
      kind_ = from.kind_;
    }
    if (cached_has_bits & 0x00000040u) {
      use_apply_to_ = from.use_apply_to_;
    }
    if (cached_has_bits & 0x00000080u) {
      exe_type_ = from.exe_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      use_relative_ = from.use_relative_;
    }
    if (cached_has_bits & 0x00000200u) {
      is_question_ = from.is_question_;
    }
    if (cached_has_bits & 0x00000400u) {
      relative_ = from.relative_;
    }
    if (cached_has_bits & 0x00000800u) {
      is_not_ = from.is_not_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  return true;
}

void Action::Swap(Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Action::InternalSwap(Action* other) {
  using std::swap;
  arguments_.InternalSwap(&other->arguments_);
  function_name_.Swap(&other->function_name_);
  code_string_.Swap(&other->code_string_);
  who_name_.Swap(&other->who_name_);
  swap(libid_, other->libid_);
  swap(id_, other->id_);
  swap(kind_, other->kind_);
  swap(use_apply_to_, other->use_apply_to_);
  swap(exe_type_, other->exe_type_);
  swap(use_relative_, other->use_relative_);
  swap(is_question_, other->is_question_);
  swap(relative_, other->relative_);
  swap(is_not_, other->is_not_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Action::GetMetadata() const {
  protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_resources_2fEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Action

// optional int32 libid = 1;
bool Action::has_libid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Action::set_has_libid() {
  _has_bits_[0] |= 0x00000008u;
}
void Action::clear_has_libid() {
  _has_bits_[0] &= ~0x00000008u;
}
void Action::clear_libid() {
  libid_ = 0;
  clear_has_libid();
}
::google::protobuf::int32 Action::libid() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Action.libid)
  return libid_;
}
void Action::set_libid(::google::protobuf::int32 value) {
  set_has_libid();
  libid_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Action.libid)
}

// optional int32 id = 2;
bool Action::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Action::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
void Action::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void Action::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 Action::id() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Action.id)
  return id_;
}
void Action::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Action.id)
}

// optional int32 kind = 3;
bool Action::has_kind() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Action::set_has_kind() {
  _has_bits_[0] |= 0x00000020u;
}
void Action::clear_has_kind() {
  _has_bits_[0] &= ~0x00000020u;
}
void Action::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
::google::protobuf::int32 Action::kind() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Action.kind)
  return kind_;
}
void Action::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Action.kind)
}

// optional bool use_relative = 4 [(.buffers.gmx) = "userelative"];
bool Action::has_use_relative() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Action::set_has_use_relative() {
  _has_bits_[0] |= 0x00000100u;
}
void Action::clear_has_use_relative() {
  _has_bits_[0] &= ~0x00000100u;
}
void Action::clear_use_relative() {
  use_relative_ = false;
  clear_has_use_relative();
}
bool Action::use_relative() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Action.use_relative)
  return use_relative_;
}
void Action::set_use_relative(bool value) {
  set_has_use_relative();
  use_relative_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Action.use_relative)
}

// optional bool is_question = 5 [(.buffers.gmx) = "isquestion"];
bool Action::has_is_question() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Action::set_has_is_question() {
  _has_bits_[0] |= 0x00000200u;
}
void Action::clear_has_is_question() {
  _has_bits_[0] &= ~0x00000200u;
}
void Action::clear_is_question() {
  is_question_ = false;
  clear_has_is_question();
}
bool Action::is_question() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Action.is_question)
  return is_question_;
}
void Action::set_is_question(bool value) {
  set_has_is_question();
  is_question_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Action.is_question)
}

// optional int32 use_apply_to = 6 [(.buffers.gmx) = "useapplyto"];
bool Action::has_use_apply_to() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Action::set_has_use_apply_to() {
  _has_bits_[0] |= 0x00000040u;
}
void Action::clear_has_use_apply_to() {
  _has_bits_[0] &= ~0x00000040u;
}
void Action::clear_use_apply_to() {
  use_apply_to_ = 0;
  clear_has_use_apply_to();
}
::google::protobuf::int32 Action::use_apply_to() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Action.use_apply_to)
  return use_apply_to_;
}
void Action::set_use_apply_to(::google::protobuf::int32 value) {
  set_has_use_apply_to();
  use_apply_to_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Action.use_apply_to)
}

// optional int32 exe_type = 7 [(.buffers.gmx) = "exetype"];
bool Action::has_exe_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Action::set_has_exe_type() {
  _has_bits_[0] |= 0x00000080u;
}
void Action::clear_has_exe_type() {
  _has_bits_[0] &= ~0x00000080u;
}
void Action::clear_exe_type() {
  exe_type_ = 0;
  clear_has_exe_type();
}
::google::protobuf::int32 Action::exe_type() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Action.exe_type)
  return exe_type_;
}
void Action::set_exe_type(::google::protobuf::int32 value) {
  set_has_exe_type();
  exe_type_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Action.exe_type)
}

// optional string function_name = 8 [(.buffers.gmx) = "functionname"];
bool Action::has_function_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Action::set_has_function_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Action::clear_has_function_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Action::clear_function_name() {
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_function_name();
}
const ::std::string& Action::function_name() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Action.function_name)
  return function_name_.GetNoArena();
}
void Action::set_function_name(const ::std::string& value) {
  set_has_function_name();
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:buffers.resources.Action.function_name)
}
#if LANG_CXX11
void Action::set_function_name(::std::string&& value) {
  set_has_function_name();
  function_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:buffers.resources.Action.function_name)
}
#endif
void Action::set_function_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_function_name();
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:buffers.resources.Action.function_name)
}
void Action::set_function_name(const char* value, size_t size) {
  set_has_function_name();
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:buffers.resources.Action.function_name)
}
::std::string* Action::mutable_function_name() {
  set_has_function_name();
  // @@protoc_insertion_point(field_mutable:buffers.resources.Action.function_name)
  return function_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Action::release_function_name() {
  // @@protoc_insertion_point(field_release:buffers.resources.Action.function_name)
  clear_has_function_name();
  return function_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Action::set_allocated_function_name(::std::string* function_name) {
  if (function_name != NULL) {
    set_has_function_name();
  } else {
    clear_has_function_name();
  }
  function_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function_name);
  // @@protoc_insertion_point(field_set_allocated:buffers.resources.Action.function_name)
}

// optional string code_string = 9 [(.buffers.gmx) = "codestring"];
bool Action::has_code_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Action::set_has_code_string() {
  _has_bits_[0] |= 0x00000002u;
}
void Action::clear_has_code_string() {
  _has_bits_[0] &= ~0x00000002u;
}
void Action::clear_code_string() {
  code_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code_string();
}
const ::std::string& Action::code_string() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Action.code_string)
  return code_string_.GetNoArena();
}
void Action::set_code_string(const ::std::string& value) {
  set_has_code_string();
  code_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:buffers.resources.Action.code_string)
}
#if LANG_CXX11
void Action::set_code_string(::std::string&& value) {
  set_has_code_string();
  code_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:buffers.resources.Action.code_string)
}
#endif
void Action::set_code_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_code_string();
  code_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:buffers.resources.Action.code_string)
}
void Action::set_code_string(const char* value, size_t size) {
  set_has_code_string();
  code_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:buffers.resources.Action.code_string)
}
::std::string* Action::mutable_code_string() {
  set_has_code_string();
  // @@protoc_insertion_point(field_mutable:buffers.resources.Action.code_string)
  return code_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Action::release_code_string() {
  // @@protoc_insertion_point(field_release:buffers.resources.Action.code_string)
  clear_has_code_string();
  return code_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Action::set_allocated_code_string(::std::string* code_string) {
  if (code_string != NULL) {
    set_has_code_string();
  } else {
    clear_has_code_string();
  }
  code_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code_string);
  // @@protoc_insertion_point(field_set_allocated:buffers.resources.Action.code_string)
}

// optional string who_name = 10 [(.buffers.gmx) = "whoName"];
bool Action::has_who_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Action::set_has_who_name() {
  _has_bits_[0] |= 0x00000004u;
}
void Action::clear_has_who_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void Action::clear_who_name() {
  who_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_who_name();
}
const ::std::string& Action::who_name() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Action.who_name)
  return who_name_.GetNoArena();
}
void Action::set_who_name(const ::std::string& value) {
  set_has_who_name();
  who_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:buffers.resources.Action.who_name)
}
#if LANG_CXX11
void Action::set_who_name(::std::string&& value) {
  set_has_who_name();
  who_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:buffers.resources.Action.who_name)
}
#endif
void Action::set_who_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_who_name();
  who_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:buffers.resources.Action.who_name)
}
void Action::set_who_name(const char* value, size_t size) {
  set_has_who_name();
  who_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:buffers.resources.Action.who_name)
}
::std::string* Action::mutable_who_name() {
  set_has_who_name();
  // @@protoc_insertion_point(field_mutable:buffers.resources.Action.who_name)
  return who_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Action::release_who_name() {
  // @@protoc_insertion_point(field_release:buffers.resources.Action.who_name)
  clear_has_who_name();
  return who_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Action::set_allocated_who_name(::std::string* who_name) {
  if (who_name != NULL) {
    set_has_who_name();
  } else {
    clear_has_who_name();
  }
  who_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), who_name);
  // @@protoc_insertion_point(field_set_allocated:buffers.resources.Action.who_name)
}

// optional bool relative = 11;
bool Action::has_relative() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Action::set_has_relative() {
  _has_bits_[0] |= 0x00000400u;
}
void Action::clear_has_relative() {
  _has_bits_[0] &= ~0x00000400u;
}
void Action::clear_relative() {
  relative_ = false;
  clear_has_relative();
}
bool Action::relative() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Action.relative)
  return relative_;
}
void Action::set_relative(bool value) {
  set_has_relative();
  relative_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Action.relative)
}

// optional bool is_not = 12 [(.buffers.gmx) = "isnot"];
bool Action::has_is_not() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Action::set_has_is_not() {
  _has_bits_[0] |= 0x00000800u;
}
void Action::clear_has_is_not() {
  _has_bits_[0] &= ~0x00000800u;
}
void Action::clear_is_not() {
  is_not_ = false;
  clear_has_is_not();
}
bool Action::is_not() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Action.is_not)
  return is_not_;
}
void Action::set_is_not(bool value) {
  set_has_is_not();
  is_not_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Action.is_not)
}

// repeated .buffers.resources.Argument arguments = 13 [(.buffers.gmx) = "arguments/argument"];
int Action::arguments_size() const {
  return arguments_.size();
}
void Action::clear_arguments() {
  arguments_.Clear();
}
const ::buffers::resources::Argument& Action::arguments(int index) const {
  // @@protoc_insertion_point(field_get:buffers.resources.Action.arguments)
  return arguments_.Get(index);
}
::buffers::resources::Argument* Action::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:buffers.resources.Action.arguments)
  return arguments_.Mutable(index);
}
::buffers::resources::Argument* Action::add_arguments() {
  // @@protoc_insertion_point(field_add:buffers.resources.Action.arguments)
  return arguments_.Add();
}
::google::protobuf::RepeatedPtrField< ::buffers::resources::Argument >*
Action::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:buffers.resources.Action.arguments)
  return &arguments_;
}
const ::google::protobuf::RepeatedPtrField< ::buffers::resources::Argument >&
Action::arguments() const {
  // @@protoc_insertion_point(field_list:buffers.resources.Action.arguments)
  return arguments_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kTypeFieldNumber;
const int Event::kNumberFieldNumber;
const int Event::kNameFieldNumber;
const int Event::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_resources_2fEvent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      action_(from.action_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&number_) -
    reinterpret_cast<char*>(&type_)) + sizeof(number_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Event)
}

void Event::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_) -
      reinterpret_cast<char*>(&type_)) + sizeof(number_));
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:buffers.resources.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_resources_2fEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Event& Event::default_instance() {
  protobuf_resources_2fEvent_2eproto::InitDefaults();
  return *internal_default_instance();
}

Event* Event::New(::google::protobuf::Arena* arena) const {
  Event* n = new Event;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&number_) -
        reinterpret_cast<char*>(&type_)) + sizeof(number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1 [(.buffers.gmx) = "eventtype"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 number = 2 [(.buffers.gmx) = "enumb"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3 [(.buffers.gmx) = "ename"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Event.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .buffers.resources.Action action = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1 [(.buffers.gmx) = "eventtype"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 number = 2 [(.buffers.gmx) = "enumb"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number(), output);
  }

  // optional string name = 3 [(.buffers.gmx) = "ename"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Event.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // repeated .buffers.resources.Action action = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->action_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->action(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1 [(.buffers.gmx) = "eventtype"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 number = 2 [(.buffers.gmx) = "enumb"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->number(), target);
  }

  // optional string name = 3 [(.buffers.gmx) = "ename"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Event.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // repeated .buffers.resources.Action action = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->action_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->action(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Event)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .buffers.resources.Action action = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->action_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->action(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 3 [(.buffers.gmx) = "ename"];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 type = 1 [(.buffers.gmx) = "eventtype"];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 number = 2 [(.buffers.gmx) = "enumb"];
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  action_.MergeFrom(from.action_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      number_ = from.number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  action_.InternalSwap(&other->action_);
  name_.Swap(&other->name_);
  swap(type_, other->type_);
  swap(number_, other->number_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_resources_2fEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Event

// optional int32 type = 1 [(.buffers.gmx) = "eventtype"];
bool Event::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Event::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void Event::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void Event::clear_type() {
  type_ = 0;
  clear_has_type();
}
::google::protobuf::int32 Event::type() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Event.type)
  return type_;
}
void Event::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Event.type)
}

// optional int32 number = 2 [(.buffers.gmx) = "enumb"];
bool Event::has_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Event::set_has_number() {
  _has_bits_[0] |= 0x00000004u;
}
void Event::clear_has_number() {
  _has_bits_[0] &= ~0x00000004u;
}
void Event::clear_number() {
  number_ = 0;
  clear_has_number();
}
::google::protobuf::int32 Event::number() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Event.number)
  return number_;
}
void Event::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Event.number)
}

// optional string name = 3 [(.buffers.gmx) = "ename"];
bool Event::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Event::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Event::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Event::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Event::name() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Event.name)
  return name_.GetNoArena();
}
void Event::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:buffers.resources.Event.name)
}
#if LANG_CXX11
void Event::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:buffers.resources.Event.name)
}
#endif
void Event::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:buffers.resources.Event.name)
}
void Event::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:buffers.resources.Event.name)
}
::std::string* Event::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:buffers.resources.Event.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Event::release_name() {
  // @@protoc_insertion_point(field_release:buffers.resources.Event.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Event::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:buffers.resources.Event.name)
}

// repeated .buffers.resources.Action action = 4;
int Event::action_size() const {
  return action_.size();
}
void Event::clear_action() {
  action_.Clear();
}
const ::buffers::resources::Action& Event::action(int index) const {
  // @@protoc_insertion_point(field_get:buffers.resources.Event.action)
  return action_.Get(index);
}
::buffers::resources::Action* Event::mutable_action(int index) {
  // @@protoc_insertion_point(field_mutable:buffers.resources.Event.action)
  return action_.Mutable(index);
}
::buffers::resources::Action* Event::add_action() {
  // @@protoc_insertion_point(field_add:buffers.resources.Event.action)
  return action_.Add();
}
::google::protobuf::RepeatedPtrField< ::buffers::resources::Action >*
Event::mutable_action() {
  // @@protoc_insertion_point(field_mutable_list:buffers.resources.Event.action)
  return &action_;
}
const ::google::protobuf::RepeatedPtrField< ::buffers::resources::Action >&
Event::action() const {
  // @@protoc_insertion_point(field_list:buffers.resources.Event.action)
  return action_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace resources
}  // namespace buffers

// @@protoc_insertion_point(global_scope)
