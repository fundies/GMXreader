// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resources/Path.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "resources/Path.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace buffers {
namespace resources {
class Path_PointDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Path_Point>
     _instance;
} _Path_Point_default_instance_;
class PathDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Path>
     _instance;
} _Path_default_instance_;

namespace protobuf_resources_2fPath_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path_Point, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path_Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path_Point, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path_Point, speed_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, background_room_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, snap_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, snap_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, smooth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, closed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, points_),
  0,
  2,
  1,
  3,
  4,
  5,
  6,
  7,
  8,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(Path_Point)},
  { 11, 26, sizeof(Path)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Path_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Path_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "resources/Path.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::buffers::protobuf_options_2eproto::InitDefaults();
  _Path_Point_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Path_Point_default_instance_);_Path_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Path_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024resources/Path.proto\022\021buffers.resource"
      "s\032\roptions.proto\"\215\003\n\004Path\022\014\n\004name\030\001 \001(\t\022"
      "\036\n\002id\030\002 \001(\005B\022\202\265\030\016GMX_DEPRECATED\022*\n\024backg"
      "round_room_name\030\003 \001(\tB\014\202\265\030\010backroom\022\031\n\006s"
      "nap_x\030\004 \001(\005B\t\202\265\030\005hsnap\022\031\n\006snap_y\030\005 \001(\005B\t"
      "\202\265\030\005vsnap\022\"\n\006smooth\030\006 \001(\010B\022\202\265\030\016GMX_DEPRE"
      "CATED\022\016\n\006closed\030\007 \001(\010\022\021\n\tprecision\030\010 \001(\005"
      "\022\014\n\004kind\030\t \001(\005\022\?\n\006points\030\n \003(\0132\035.buffers"
      ".resources.Path.PointB\020\202\265\030\014points/point\032"
      "_\n\005Point\022\032\n\001x\030\001 \001(\005B\017\202\265\030\013GMX_SPLIT/0\022\032\n\001"
      "y\030\002 \001(\005B\017\202\265\030\013GMX_SPLIT/1\022\036\n\005speed\030\003 \001(\005B"
      "\017\202\265\030\013GMX_SPLIT/2"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 456);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "resources/Path.proto", &protobuf_RegisterTypes);
  ::buffers::protobuf_options_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_resources_2fPath_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Path_Point::kXFieldNumber;
const int Path_Point::kYFieldNumber;
const int Path_Point::kSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Path_Point::Path_Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_resources_2fPath_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Path.Point)
}
Path_Point::Path_Point(const Path_Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&x_)) + sizeof(speed_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Path.Point)
}

void Path_Point::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&x_)) + sizeof(speed_));
}

Path_Point::~Path_Point() {
  // @@protoc_insertion_point(destructor:buffers.resources.Path.Point)
  SharedDtor();
}

void Path_Point::SharedDtor() {
}

void Path_Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Path_Point::descriptor() {
  protobuf_resources_2fPath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_resources_2fPath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Path_Point& Path_Point::default_instance() {
  protobuf_resources_2fPath_2eproto::InitDefaults();
  return *internal_default_instance();
}

Path_Point* Path_Point::New(::google::protobuf::Arena* arena) const {
  Path_Point* n = new Path_Point;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Path_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Path.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&speed_) -
        reinterpret_cast<char*>(&x_)) + sizeof(speed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Path_Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Path.Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 speed = 3 [(.buffers.gmx) = "GMX_SPLIT/2"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Path.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Path.Point)
  return false;
#undef DO_
}

void Path_Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Path.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // optional int32 speed = 3 [(.buffers.gmx) = "GMX_SPLIT/2"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Path.Point)
}

::google::protobuf::uint8* Path_Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Path.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // optional int32 speed = 3 [(.buffers.gmx) = "GMX_SPLIT/2"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Path.Point)
  return target;
}

size_t Path_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Path.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 x = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 speed = 3 [(.buffers.gmx) = "GMX_SPLIT/2"];
    if (has_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->speed());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Path_Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Path.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Path_Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Path_Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Path.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Path.Point)
    MergeFrom(*source);
  }
}

void Path_Point::MergeFrom(const Path_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Path.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      speed_ = from.speed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Path_Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Path.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Path_Point::CopyFrom(const Path_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Path.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path_Point::IsInitialized() const {
  return true;
}

void Path_Point::Swap(Path_Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Path_Point::InternalSwap(Path_Point* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(speed_, other->speed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Path_Point::GetMetadata() const {
  protobuf_resources_2fPath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_resources_2fPath_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Path_Point

// optional int32 x = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];
bool Path_Point::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Path_Point::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Path_Point::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Path_Point::clear_x() {
  x_ = 0;
  clear_has_x();
}
::google::protobuf::int32 Path_Point::x() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Path.Point.x)
  return x_;
}
void Path_Point::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Path.Point.x)
}

// optional int32 y = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];
bool Path_Point::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Path_Point::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Path_Point::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Path_Point::clear_y() {
  y_ = 0;
  clear_has_y();
}
::google::protobuf::int32 Path_Point::y() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Path.Point.y)
  return y_;
}
void Path_Point::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Path.Point.y)
}

// optional int32 speed = 3 [(.buffers.gmx) = "GMX_SPLIT/2"];
bool Path_Point::has_speed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Path_Point::set_has_speed() {
  _has_bits_[0] |= 0x00000004u;
}
void Path_Point::clear_has_speed() {
  _has_bits_[0] &= ~0x00000004u;
}
void Path_Point::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
::google::protobuf::int32 Path_Point::speed() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Path.Point.speed)
  return speed_;
}
void Path_Point::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Path.Point.speed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Path::kNameFieldNumber;
const int Path::kIdFieldNumber;
const int Path::kBackgroundRoomNameFieldNumber;
const int Path::kSnapXFieldNumber;
const int Path::kSnapYFieldNumber;
const int Path::kSmoothFieldNumber;
const int Path::kClosedFieldNumber;
const int Path::kPrecisionFieldNumber;
const int Path::kKindFieldNumber;
const int Path::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Path::Path()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_resources_2fPath_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Path)
}
Path::Path(const Path& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  background_room_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_background_room_name()) {
    background_room_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.background_room_name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&id_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Path)
}

void Path::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  background_room_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&id_)) + sizeof(kind_));
}

Path::~Path() {
  // @@protoc_insertion_point(destructor:buffers.resources.Path)
  SharedDtor();
}

void Path::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  background_room_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Path::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Path::descriptor() {
  protobuf_resources_2fPath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_resources_2fPath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Path& Path::default_instance() {
  protobuf_resources_2fPath_2eproto::InitDefaults();
  return *internal_default_instance();
}

Path* Path::New(::google::protobuf::Arena* arena) const {
  Path* n = new Path;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Path::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!background_room_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*background_room_name_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&precision_) -
        reinterpret_cast<char*>(&id_)) + sizeof(precision_));
  }
  kind_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Path::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Path)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Path.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string background_room_name = 3 [(.buffers.gmx) = "backroom"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_background_room_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->background_room_name().data(), static_cast<int>(this->background_room_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Path.background_room_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 snap_x = 4 [(.buffers.gmx) = "hsnap"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_snap_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &snap_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 snap_y = 5 [(.buffers.gmx) = "vsnap"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_snap_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &snap_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool smooth = 6 [(.buffers.gmx) = "GMX_DEPRECATED"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_smooth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &smooth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool closed = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_closed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &closed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 precision = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 kind = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .buffers.resources.Path.Point points = 10 [(.buffers.gmx) = "points/point"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Path)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Path)
  return false;
#undef DO_
}

void Path::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Path.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional string background_room_name = 3 [(.buffers.gmx) = "backroom"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->background_room_name().data(), static_cast<int>(this->background_room_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Path.background_room_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->background_room_name(), output);
  }

  // optional int32 snap_x = 4 [(.buffers.gmx) = "hsnap"];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->snap_x(), output);
  }

  // optional int32 snap_y = 5 [(.buffers.gmx) = "vsnap"];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->snap_y(), output);
  }

  // optional bool smooth = 6 [(.buffers.gmx) = "GMX_DEPRECATED"];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->smooth(), output);
  }

  // optional bool closed = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->closed(), output);
  }

  // optional int32 precision = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->precision(), output);
  }

  // optional int32 kind = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->kind(), output);
  }

  // repeated .buffers.resources.Path.Point points = 10 [(.buffers.gmx) = "points/point"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->points(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Path)
}

::google::protobuf::uint8* Path::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Path.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional string background_room_name = 3 [(.buffers.gmx) = "backroom"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->background_room_name().data(), static_cast<int>(this->background_room_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Path.background_room_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->background_room_name(), target);
  }

  // optional int32 snap_x = 4 [(.buffers.gmx) = "hsnap"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->snap_x(), target);
  }

  // optional int32 snap_y = 5 [(.buffers.gmx) = "vsnap"];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->snap_y(), target);
  }

  // optional bool smooth = 6 [(.buffers.gmx) = "GMX_DEPRECATED"];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->smooth(), target);
  }

  // optional bool closed = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->closed(), target);
  }

  // optional int32 precision = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->precision(), target);
  }

  // optional int32 kind = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->kind(), target);
  }

  // repeated .buffers.resources.Path.Point points = 10 [(.buffers.gmx) = "points/point"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->points(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Path)
  return target;
}

size_t Path::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Path)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .buffers.resources.Path.Point points = 10 [(.buffers.gmx) = "points/point"];
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->points(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string background_room_name = 3 [(.buffers.gmx) = "backroom"];
    if (has_background_room_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->background_room_name());
    }

    // optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 snap_x = 4 [(.buffers.gmx) = "hsnap"];
    if (has_snap_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->snap_x());
    }

    // optional int32 snap_y = 5 [(.buffers.gmx) = "vsnap"];
    if (has_snap_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->snap_y());
    }

    // optional bool smooth = 6 [(.buffers.gmx) = "GMX_DEPRECATED"];
    if (has_smooth()) {
      total_size += 1 + 1;
    }

    // optional bool closed = 7;
    if (has_closed()) {
      total_size += 1 + 1;
    }

    // optional int32 precision = 8;
    if (has_precision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->precision());
    }

  }
  // optional int32 kind = 9;
  if (has_kind()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Path::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Path)
  GOOGLE_DCHECK_NE(&from, this);
  const Path* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Path>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Path)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Path)
    MergeFrom(*source);
  }
}

void Path::MergeFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Path)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_background_room_name();
      background_room_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.background_room_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      snap_x_ = from.snap_x_;
    }
    if (cached_has_bits & 0x00000010u) {
      snap_y_ = from.snap_y_;
    }
    if (cached_has_bits & 0x00000020u) {
      smooth_ = from.smooth_;
    }
    if (cached_has_bits & 0x00000040u) {
      closed_ = from.closed_;
    }
    if (cached_has_bits & 0x00000080u) {
      precision_ = from.precision_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_kind(from.kind());
  }
}

void Path::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Path::CopyFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path::IsInitialized() const {
  return true;
}

void Path::Swap(Path* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Path::InternalSwap(Path* other) {
  using std::swap;
  points_.InternalSwap(&other->points_);
  name_.Swap(&other->name_);
  background_room_name_.Swap(&other->background_room_name_);
  swap(id_, other->id_);
  swap(snap_x_, other->snap_x_);
  swap(snap_y_, other->snap_y_);
  swap(smooth_, other->smooth_);
  swap(closed_, other->closed_);
  swap(precision_, other->precision_);
  swap(kind_, other->kind_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Path::GetMetadata() const {
  protobuf_resources_2fPath_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_resources_2fPath_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Path

// optional string name = 1;
bool Path::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Path::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Path::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Path::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Path::name() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Path.name)
  return name_.GetNoArena();
}
void Path::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:buffers.resources.Path.name)
}
#if LANG_CXX11
void Path::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:buffers.resources.Path.name)
}
#endif
void Path::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:buffers.resources.Path.name)
}
void Path::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:buffers.resources.Path.name)
}
::std::string* Path::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:buffers.resources.Path.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Path::release_name() {
  // @@protoc_insertion_point(field_release:buffers.resources.Path.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Path::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:buffers.resources.Path.name)
}

// optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];
bool Path::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Path::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
void Path::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void Path::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 Path::id() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Path.id)
  return id_;
}
void Path::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Path.id)
}

// optional string background_room_name = 3 [(.buffers.gmx) = "backroom"];
bool Path::has_background_room_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Path::set_has_background_room_name() {
  _has_bits_[0] |= 0x00000002u;
}
void Path::clear_has_background_room_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void Path::clear_background_room_name() {
  background_room_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_background_room_name();
}
const ::std::string& Path::background_room_name() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Path.background_room_name)
  return background_room_name_.GetNoArena();
}
void Path::set_background_room_name(const ::std::string& value) {
  set_has_background_room_name();
  background_room_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:buffers.resources.Path.background_room_name)
}
#if LANG_CXX11
void Path::set_background_room_name(::std::string&& value) {
  set_has_background_room_name();
  background_room_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:buffers.resources.Path.background_room_name)
}
#endif
void Path::set_background_room_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_background_room_name();
  background_room_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:buffers.resources.Path.background_room_name)
}
void Path::set_background_room_name(const char* value, size_t size) {
  set_has_background_room_name();
  background_room_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:buffers.resources.Path.background_room_name)
}
::std::string* Path::mutable_background_room_name() {
  set_has_background_room_name();
  // @@protoc_insertion_point(field_mutable:buffers.resources.Path.background_room_name)
  return background_room_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Path::release_background_room_name() {
  // @@protoc_insertion_point(field_release:buffers.resources.Path.background_room_name)
  clear_has_background_room_name();
  return background_room_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Path::set_allocated_background_room_name(::std::string* background_room_name) {
  if (background_room_name != NULL) {
    set_has_background_room_name();
  } else {
    clear_has_background_room_name();
  }
  background_room_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), background_room_name);
  // @@protoc_insertion_point(field_set_allocated:buffers.resources.Path.background_room_name)
}

// optional int32 snap_x = 4 [(.buffers.gmx) = "hsnap"];
bool Path::has_snap_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Path::set_has_snap_x() {
  _has_bits_[0] |= 0x00000008u;
}
void Path::clear_has_snap_x() {
  _has_bits_[0] &= ~0x00000008u;
}
void Path::clear_snap_x() {
  snap_x_ = 0;
  clear_has_snap_x();
}
::google::protobuf::int32 Path::snap_x() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Path.snap_x)
  return snap_x_;
}
void Path::set_snap_x(::google::protobuf::int32 value) {
  set_has_snap_x();
  snap_x_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Path.snap_x)
}

// optional int32 snap_y = 5 [(.buffers.gmx) = "vsnap"];
bool Path::has_snap_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Path::set_has_snap_y() {
  _has_bits_[0] |= 0x00000010u;
}
void Path::clear_has_snap_y() {
  _has_bits_[0] &= ~0x00000010u;
}
void Path::clear_snap_y() {
  snap_y_ = 0;
  clear_has_snap_y();
}
::google::protobuf::int32 Path::snap_y() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Path.snap_y)
  return snap_y_;
}
void Path::set_snap_y(::google::protobuf::int32 value) {
  set_has_snap_y();
  snap_y_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Path.snap_y)
}

// optional bool smooth = 6 [(.buffers.gmx) = "GMX_DEPRECATED"];
bool Path::has_smooth() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Path::set_has_smooth() {
  _has_bits_[0] |= 0x00000020u;
}
void Path::clear_has_smooth() {
  _has_bits_[0] &= ~0x00000020u;
}
void Path::clear_smooth() {
  smooth_ = false;
  clear_has_smooth();
}
bool Path::smooth() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Path.smooth)
  return smooth_;
}
void Path::set_smooth(bool value) {
  set_has_smooth();
  smooth_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Path.smooth)
}

// optional bool closed = 7;
bool Path::has_closed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Path::set_has_closed() {
  _has_bits_[0] |= 0x00000040u;
}
void Path::clear_has_closed() {
  _has_bits_[0] &= ~0x00000040u;
}
void Path::clear_closed() {
  closed_ = false;
  clear_has_closed();
}
bool Path::closed() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Path.closed)
  return closed_;
}
void Path::set_closed(bool value) {
  set_has_closed();
  closed_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Path.closed)
}

// optional int32 precision = 8;
bool Path::has_precision() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Path::set_has_precision() {
  _has_bits_[0] |= 0x00000080u;
}
void Path::clear_has_precision() {
  _has_bits_[0] &= ~0x00000080u;
}
void Path::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
::google::protobuf::int32 Path::precision() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Path.precision)
  return precision_;
}
void Path::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Path.precision)
}

// optional int32 kind = 9;
bool Path::has_kind() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Path::set_has_kind() {
  _has_bits_[0] |= 0x00000100u;
}
void Path::clear_has_kind() {
  _has_bits_[0] &= ~0x00000100u;
}
void Path::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
::google::protobuf::int32 Path::kind() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Path.kind)
  return kind_;
}
void Path::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Path.kind)
}

// repeated .buffers.resources.Path.Point points = 10 [(.buffers.gmx) = "points/point"];
int Path::points_size() const {
  return points_.size();
}
void Path::clear_points() {
  points_.Clear();
}
const ::buffers::resources::Path_Point& Path::points(int index) const {
  // @@protoc_insertion_point(field_get:buffers.resources.Path.points)
  return points_.Get(index);
}
::buffers::resources::Path_Point* Path::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:buffers.resources.Path.points)
  return points_.Mutable(index);
}
::buffers::resources::Path_Point* Path::add_points() {
  // @@protoc_insertion_point(field_add:buffers.resources.Path.points)
  return points_.Add();
}
::google::protobuf::RepeatedPtrField< ::buffers::resources::Path_Point >*
Path::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:buffers.resources.Path.points)
  return &points_;
}
const ::google::protobuf::RepeatedPtrField< ::buffers::resources::Path_Point >&
Path::points() const {
  // @@protoc_insertion_point(field_list:buffers.resources.Path.points)
  return points_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace resources
}  // namespace buffers

// @@protoc_insertion_point(global_scope)
