// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resources/Path.proto

#include "resources/Path.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace buffers {
namespace resources {
class Path_PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Path_Point>
      _instance;
} _Path_Point_default_instance_;
class Path_EditorMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Path_EditorMetadata>
      _instance;
} _Path_EditorMetadata_default_instance_;
class PathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Path>
      _instance;
} _Path_default_instance_;
}  // namespace resources
}  // namespace buffers
namespace protobuf_resources_2fPath_2eproto {
void InitDefaultsPath_PointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::buffers::resources::_Path_Point_default_instance_;
    new (ptr) ::buffers::resources::Path_Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Path_Point::InitAsDefaultInstance();
}

void InitDefaultsPath_Point() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPath_PointImpl);
}

void InitDefaultsPath_EditorMetadataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::buffers::resources::_Path_EditorMetadata_default_instance_;
    new (ptr) ::buffers::resources::Path_EditorMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Path_EditorMetadata::InitAsDefaultInstance();
}

void InitDefaultsPath_EditorMetadata() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPath_EditorMetadataImpl);
}

void InitDefaultsPathImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_resources_2fPath_2eproto::InitDefaultsPath_EditorMetadata();
  protobuf_resources_2fPath_2eproto::InitDefaultsPath_Point();
  {
    void* ptr = &::buffers::resources::_Path_default_instance_;
    new (ptr) ::buffers::resources::Path();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Path::InitAsDefaultInstance();
}

void InitDefaultsPath() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPathImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path_Point, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path_Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path_Point, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path_Point, speed_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path_EditorMetadata, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path_EditorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path_EditorMetadata, background_room_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path_EditorMetadata, snap_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path_EditorMetadata, snap_y_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path, editor_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path, smooth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path, closed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Path, points_),
  0,
  2,
  1,
  3,
  4,
  5,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::buffers::resources::Path_Point)},
  { 11, 19, sizeof(::buffers::resources::Path_EditorMetadata)},
  { 22, 34, sizeof(::buffers::resources::Path)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Path_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Path_EditorMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Path_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "resources/Path.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024resources/Path.proto\022\021buffers.resource"
      "s\032\roptions.proto\"\301\002\n\004Path\022\014\n\004name\030\001 \001(\t\022"
      "\n\n\002id\030\002 \001(\005\022\?\n\017editor_metadata\030\003 \001(\0132&.b"
      "uffers.resources.Path.EditorMetadata\022\016\n\006"
      "smooth\030\004 \001(\010\022\016\n\006closed\030\005 \001(\010\022\021\n\tprecisio"
      "n\030\006 \001(\005\022-\n\006points\030\007 \003(\0132\035.buffers.resour"
      "ces.Path.Point\032,\n\005Point\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030"
      "\002 \001(\005\022\r\n\005speed\030\003 \001(\005\032N\n\016EditorMetadata\022\034"
      "\n\024background_room_name\030\001 \001(\t\022\016\n\006snap_x\030\002"
      " \001(\005\022\016\n\006snap_y\030\003 \001(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 380);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "resources/Path.proto", &protobuf_RegisterTypes);
  ::protobuf_options_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_resources_2fPath_2eproto
namespace buffers {
namespace resources {

// ===================================================================

void Path_Point::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Path_Point::kXFieldNumber;
const int Path_Point::kYFieldNumber;
const int Path_Point::kSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Path_Point::Path_Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_resources_2fPath_2eproto::InitDefaultsPath_Point();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Path.Point)
}
Path_Point::Path_Point(const Path_Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&x_)) + sizeof(speed_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Path.Point)
}

void Path_Point::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&x_)) + sizeof(speed_));
}

Path_Point::~Path_Point() {
  // @@protoc_insertion_point(destructor:buffers.resources.Path.Point)
  SharedDtor();
}

void Path_Point::SharedDtor() {
}

void Path_Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Path_Point::descriptor() {
  ::protobuf_resources_2fPath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fPath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Path_Point& Path_Point::default_instance() {
  ::protobuf_resources_2fPath_2eproto::InitDefaultsPath_Point();
  return *internal_default_instance();
}

Path_Point* Path_Point::New(::google::protobuf::Arena* arena) const {
  Path_Point* n = new Path_Point;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Path_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Path.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&speed_) -
        reinterpret_cast<char*>(&x_)) + sizeof(speed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Path_Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Path.Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 speed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Path.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Path.Point)
  return false;
#undef DO_
}

void Path_Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Path.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // optional int32 speed = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Path.Point)
}

::google::protobuf::uint8* Path_Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Path.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // optional int32 speed = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Path.Point)
  return target;
}

size_t Path_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Path.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 speed = 3;
    if (has_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->speed());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Path_Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Path.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Path_Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Path_Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Path.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Path.Point)
    MergeFrom(*source);
  }
}

void Path_Point::MergeFrom(const Path_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Path.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      speed_ = from.speed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Path_Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Path.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Path_Point::CopyFrom(const Path_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Path.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path_Point::IsInitialized() const {
  return true;
}

void Path_Point::Swap(Path_Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Path_Point::InternalSwap(Path_Point* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(speed_, other->speed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Path_Point::GetMetadata() const {
  protobuf_resources_2fPath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fPath_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Path_EditorMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Path_EditorMetadata::kBackgroundRoomNameFieldNumber;
const int Path_EditorMetadata::kSnapXFieldNumber;
const int Path_EditorMetadata::kSnapYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Path_EditorMetadata::Path_EditorMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_resources_2fPath_2eproto::InitDefaultsPath_EditorMetadata();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Path.EditorMetadata)
}
Path_EditorMetadata::Path_EditorMetadata(const Path_EditorMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  background_room_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_background_room_name()) {
    background_room_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.background_room_name_);
  }
  ::memcpy(&snap_x_, &from.snap_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&snap_y_) -
    reinterpret_cast<char*>(&snap_x_)) + sizeof(snap_y_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Path.EditorMetadata)
}

void Path_EditorMetadata::SharedCtor() {
  _cached_size_ = 0;
  background_room_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&snap_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&snap_y_) -
      reinterpret_cast<char*>(&snap_x_)) + sizeof(snap_y_));
}

Path_EditorMetadata::~Path_EditorMetadata() {
  // @@protoc_insertion_point(destructor:buffers.resources.Path.EditorMetadata)
  SharedDtor();
}

void Path_EditorMetadata::SharedDtor() {
  background_room_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Path_EditorMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Path_EditorMetadata::descriptor() {
  ::protobuf_resources_2fPath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fPath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Path_EditorMetadata& Path_EditorMetadata::default_instance() {
  ::protobuf_resources_2fPath_2eproto::InitDefaultsPath_EditorMetadata();
  return *internal_default_instance();
}

Path_EditorMetadata* Path_EditorMetadata::New(::google::protobuf::Arena* arena) const {
  Path_EditorMetadata* n = new Path_EditorMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Path_EditorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Path.EditorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!background_room_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*background_room_name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&snap_x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&snap_y_) -
        reinterpret_cast<char*>(&snap_x_)) + sizeof(snap_y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Path_EditorMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Path.EditorMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string background_room_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_background_room_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->background_room_name().data(), static_cast<int>(this->background_room_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Path.EditorMetadata.background_room_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 snap_x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_snap_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &snap_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 snap_y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_snap_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &snap_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Path.EditorMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Path.EditorMetadata)
  return false;
#undef DO_
}

void Path_EditorMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Path.EditorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string background_room_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->background_room_name().data(), static_cast<int>(this->background_room_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Path.EditorMetadata.background_room_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->background_room_name(), output);
  }

  // optional int32 snap_x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->snap_x(), output);
  }

  // optional int32 snap_y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->snap_y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Path.EditorMetadata)
}

::google::protobuf::uint8* Path_EditorMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Path.EditorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string background_room_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->background_room_name().data(), static_cast<int>(this->background_room_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Path.EditorMetadata.background_room_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->background_room_name(), target);
  }

  // optional int32 snap_x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->snap_x(), target);
  }

  // optional int32 snap_y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->snap_y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Path.EditorMetadata)
  return target;
}

size_t Path_EditorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Path.EditorMetadata)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string background_room_name = 1;
    if (has_background_room_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->background_room_name());
    }

    // optional int32 snap_x = 2;
    if (has_snap_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->snap_x());
    }

    // optional int32 snap_y = 3;
    if (has_snap_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->snap_y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Path_EditorMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Path.EditorMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const Path_EditorMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Path_EditorMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Path.EditorMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Path.EditorMetadata)
    MergeFrom(*source);
  }
}

void Path_EditorMetadata::MergeFrom(const Path_EditorMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Path.EditorMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_background_room_name();
      background_room_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.background_room_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      snap_x_ = from.snap_x_;
    }
    if (cached_has_bits & 0x00000004u) {
      snap_y_ = from.snap_y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Path_EditorMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Path.EditorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Path_EditorMetadata::CopyFrom(const Path_EditorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Path.EditorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path_EditorMetadata::IsInitialized() const {
  return true;
}

void Path_EditorMetadata::Swap(Path_EditorMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Path_EditorMetadata::InternalSwap(Path_EditorMetadata* other) {
  using std::swap;
  background_room_name_.Swap(&other->background_room_name_);
  swap(snap_x_, other->snap_x_);
  swap(snap_y_, other->snap_y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Path_EditorMetadata::GetMetadata() const {
  protobuf_resources_2fPath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fPath_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Path::InitAsDefaultInstance() {
  ::buffers::resources::_Path_default_instance_._instance.get_mutable()->editor_metadata_ = const_cast< ::buffers::resources::Path_EditorMetadata*>(
      ::buffers::resources::Path_EditorMetadata::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Path::kNameFieldNumber;
const int Path::kIdFieldNumber;
const int Path::kEditorMetadataFieldNumber;
const int Path::kSmoothFieldNumber;
const int Path::kClosedFieldNumber;
const int Path::kPrecisionFieldNumber;
const int Path::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Path::Path()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_resources_2fPath_2eproto::InitDefaultsPath();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Path)
}
Path::Path(const Path& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_editor_metadata()) {
    editor_metadata_ = new ::buffers::resources::Path_EditorMetadata(*from.editor_metadata_);
  } else {
    editor_metadata_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&precision_) -
    reinterpret_cast<char*>(&id_)) + sizeof(precision_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Path)
}

void Path::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&editor_metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&editor_metadata_)) + sizeof(precision_));
}

Path::~Path() {
  // @@protoc_insertion_point(destructor:buffers.resources.Path)
  SharedDtor();
}

void Path::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete editor_metadata_;
}

void Path::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Path::descriptor() {
  ::protobuf_resources_2fPath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fPath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Path& Path::default_instance() {
  ::protobuf_resources_2fPath_2eproto::InitDefaultsPath();
  return *internal_default_instance();
}

Path* Path::New(::google::protobuf::Arena* arena) const {
  Path* n = new Path;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Path::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(editor_metadata_ != NULL);
      editor_metadata_->Clear();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&precision_) -
        reinterpret_cast<char*>(&id_)) + sizeof(precision_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Path::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Path)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Path.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .buffers.resources.Path.EditorMetadata editor_metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_editor_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool smooth = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_smooth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &smooth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool closed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_closed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &closed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 precision = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .buffers.resources.Path.Point points = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Path)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Path)
  return false;
#undef DO_
}

void Path::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Path.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional .buffers.resources.Path.EditorMetadata editor_metadata = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->editor_metadata_, output);
  }

  // optional bool smooth = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->smooth(), output);
  }

  // optional bool closed = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->closed(), output);
  }

  // optional int32 precision = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->precision(), output);
  }

  // repeated .buffers.resources.Path.Point points = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->points(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Path)
}

::google::protobuf::uint8* Path::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Path.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional .buffers.resources.Path.EditorMetadata editor_metadata = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->editor_metadata_, deterministic, target);
  }

  // optional bool smooth = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->smooth(), target);
  }

  // optional bool closed = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->closed(), target);
  }

  // optional int32 precision = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->precision(), target);
  }

  // repeated .buffers.resources.Path.Point points = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->points(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Path)
  return target;
}

size_t Path::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Path)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .buffers.resources.Path.Point points = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .buffers.resources.Path.EditorMetadata editor_metadata = 3;
    if (has_editor_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->editor_metadata_);
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional bool smooth = 4;
    if (has_smooth()) {
      total_size += 1 + 1;
    }

    // optional bool closed = 5;
    if (has_closed()) {
      total_size += 1 + 1;
    }

    // optional int32 precision = 6;
    if (has_precision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->precision());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Path::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Path)
  GOOGLE_DCHECK_NE(&from, this);
  const Path* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Path>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Path)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Path)
    MergeFrom(*source);
  }
}

void Path::MergeFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Path)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_editor_metadata()->::buffers::resources::Path_EditorMetadata::MergeFrom(from.editor_metadata());
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      smooth_ = from.smooth_;
    }
    if (cached_has_bits & 0x00000010u) {
      closed_ = from.closed_;
    }
    if (cached_has_bits & 0x00000020u) {
      precision_ = from.precision_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Path::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Path::CopyFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path::IsInitialized() const {
  return true;
}

void Path::Swap(Path* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Path::InternalSwap(Path* other) {
  using std::swap;
  points_.InternalSwap(&other->points_);
  name_.Swap(&other->name_);
  swap(editor_metadata_, other->editor_metadata_);
  swap(id_, other->id_);
  swap(smooth_, other->smooth_);
  swap(closed_, other->closed_);
  swap(precision_, other->precision_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Path::GetMetadata() const {
  protobuf_resources_2fPath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fPath_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace resources
}  // namespace buffers

// @@protoc_insertion_point(global_scope)
